global !p
import os

def module_name():
		segments = path.split("/")
		base = os.path.splitext(fn)[0]
		if base == "index":
				return segments[-2]
		return base
endglobal

snippet rafce "function component default export (with prop interface)" b
import React from "react";
import styles from "./$1.module.sass";

interface Props {}

const ${1:`!p snip.rv = module_name()`}: React.FC<Props> = () => {
	return (
		<div className={styles.root}>
			<p>Hello world!</p>
		</div>
	);
};

export default $1;
endsnippet

snippet rals "landing section" b
import React from "react";
import styles from "./$1.module.sass";

interface Props {}

const ${1:`!p snip.rv = module_name()`}: React.FC<Props> = () => {
	return (
		<section className={styles.section}>
			<h2>$1</h2>
		</section>
	);
};

export default $1;
endsnippet

snippet sfce "Solid function component default export (with prop interface)" b
import { Component } from "solid-js";

import styles from "./$1.module.sass";

interface Props {}

const ${1:`!p snip.rv = module_name()`}: Component<Props> = () => {
	return (
		<div class={styles.root}>
			<p>Hello world!</p>
		</div>
	);
};

export default $1;
endsnippet


snippet rance "function component default export (with prop interface)" b
import React from "react";
import { View, Text, StyleSheet } from "react-native";

interface Props {}

const ${1:`!p snip.rv = module_name()`}: React.FC<Props> = () => {
	return (
		<View style={styles.root}>
			<Text>Hello world!</Text>
		</View>
	);
};

const styles = StyleSheet.create({
	root: {
		flex: 1
	}
});

export default $1;
endsnippet


snippet rav "function component default export (with prop interface)" b
import React from "react";
import Layout from "@views/Layout";

interface Props {}

const ${1:`!p snip.rv = module_name()`}: React.FC<Props> = () => {
	return (
		<Layout title="$2">
			$3
		</Layout>
	);
};

export default $1;
endsnippet

snippet router "nested router view for React Router v6" b
import { Routes, Route } from "react-router-dom";

const ${1:`!p snip.rv = module_name`}Router = () => {
  return (
    <Routes>
      <Route index element={<UserIndex />} />
    </Routes>
  );
};

export default $1Router;
endsnippet
